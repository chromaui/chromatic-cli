import type { Context } from '../../types';

export const createBaseBuild = () => ({
  id: 'test-id',
  number: 42,
  status: 'PASSED',
  webUrl: 'https://www.chromatic.com/build?appId=59c59bd0183bd100364e1d57&number=42',
  storybookUrl: 'https://5d67dc0374b2e300209c41e7-pfkaemtlit.chromatic.com/',
  inheritedCaptureCount: 0,
  actualCaptureCount: 0,
  actualTestCount: 0,
  specCount: 0,
  componentCount: 0,
  testCount: 0,
  changeCount: 0,
  errorCount: 0,
  accessibilityChangeCount: 0,
  interactionTestFailuresCount: 0,
  autoAcceptChanges: false,
  app: {
    manageUrl: 'https://chromatic.com/manage',
    setupUrl: 'https://www.chromatic.com/setup?appId=59c59bd0183bd100364e1d57',
  },
});

export const createBaseOptions = () => ({
  projectToken: 'test-token',
  onlyChanged: 'false',
  onlyStoryFiles: [],
  onlyStoryNames: [],
  untraced: [],
  externals: [],
  traceChanged: 'false',
  list: false,
  fromCI: false,
  inAction: false,
  skip: false,
  dryRun: false,
  forceRebuild: 'false',
  debug: false,
  fileHashing: false,
  interactive: false,
  zip: false,
  autoAcceptChanges: false,
  exitZeroOnChanges: 'false',
  exitOnceUploaded: 'false',
  isLocalBuild: false,
  ignoreLastBuildOnBranch: 'false',
  preserveMissingSpecs: false,
  originalArgv: [],
  buildScriptName: '',
  buildCommand: '',
  outputDir: '',
  storybookBuildDir: '',
  storybookBaseDir: '',
  storybookConfigDir: '',
  storybookLogFile: '',
  ownerName: '',
  repositorySlug: '',
  branchName: '',
  patchHeadRef: '',
  patchBaseRef: '',
  skipUpdateCheck: false,
  playwright: false,
  cypress: false,
  allowConsoleErrors: false,
});

export const createBaseContext = (overrides: Partial<Context> = {}) => ({
  build: createBaseBuild(),
  options: createBaseOptions(),
  ...overrides,
});
